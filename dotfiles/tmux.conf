# ---- General -----------------------------------------------------------------

bind r source-file ~/.tmux.conf             # Reload the config.

# Use 'C-a' as a command prefix rather than 'C-b'.
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -g default-terminal "tmux-256color"     # Fix broken color.
set -g status-bg black                      # Set bottom status line background color black.
set -g status-fg green                      # Set bottom status line foreground color green. (text color)
set -g history-limit 5000                   # Record more history.
set -g set-titles on                        # Try to set the client terminal title using tsl and fsl terminfo.
set -g status-keys vi                       # Use vi keybindings on status line. (e.g., prompt)
set -sg repeat-time 200                     # Decrease tmux command repeat timeout.
set -sg escape-time 0                       # Make delay after entering prefix shorter.

# ---- Display -----------------------------------------------------------------

set -g base-index 1                         # Start window indexing from 1.
set -g pane-base-index 1                    # Start pane indexing from 1.
set -g automatic-rename on                  # Rename windows based on running program.
set -g renumber-windows on                  # Renumber other windows when one is closed.
set -g monitor-activity on                  # Notify activities occur in the window with status line icon.
set -g visual-activity off                  # But do not notify with status line message.
set -g aggressive-resize off                # Do not constrain the window size.

# ---- Pane --------------------------------------------------------------------

bind -n M-. swap-pane -D                    # Swap current pane with the next one.
bind -n M-, swap-pane -U                    # Swap current pane with the previous one.
bind -n M-q kill-pane                       # Kill current pane.

# Create pane with current path.
bind -n M-/ split-window -h -c '#{pane_current_path}'
bind -n M-- split-window -v -c '#{pane_current_path}'

# Pane navigation.
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R

# Pane resizing.
bind -nr M-H resize-pane -L 2
bind -nr M-J resize-pane -D 2
bind -nr M-K resize-pane -U 2
bind -nr M-L resize-pane -R 2
bind -n  M-z resize-pane -Z                 # Zoom current pane.

# Smart pane switching with awareness of vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

# ---- Window ------------------------------------------------------------------

bind -n C-q kill-window                          # Kill current window.
bind -n C-n new-window -c '#{pane_current_path}' # Create window with current path.

# Window navigation.
bind -n C-, previous-window
bind -n C-. next-window
bind -n C-s command-prompt -p 'select-window' 'select-window -t %%'

# ---- Session -----------------------------------------------------------------

bind n new-session                          # Create new session.

# Find session and attatch to it.
bind f command-prompt -p 'switch-client' 'switch-client -t %%'

# ---- Copy Mode ---------------------------------------------------------------

set -g mode-keys vi                                        # Use vi-style keybindings in copy mode.

bind -T copy-mode-vi v   send -X begin-selection           # Begin highlighting by pressing 'v' like vi.
bind -T copy-mode-vi y   send -X copy-selection-and-cancel # Copy highlighted text by pressing 'y' like vi.
bind -T copy-mode-vi V   send -X select-line               # Highlight whole line by pressing 'Shift-v' like vi.
bind -T copy-mode-vi C-v send -X rectangle-toggle          # Toggle vi-style vertical highlighting by pressing 'C-v'.
